var search_data = {"index":{"searchIndex":["bitly4r","client","error","params","response","simpleclient","object","bitly4r()","token()","expand()","expand()","info()","method_missing()","new()","new()","new()","shorten()","shorten()","to_s()","to_s()","to_str()","to_sym()","changelog","license","readme"],"longSearchIndex":["bitly4r","bitly4r::client","bitly4r::error","bitly4r::params","bitly4r::response","bitly4r::simpleclient","object","object#bitly4r()","bitly4r::token()","bitly4r::client#expand()","bitly4r::simpleclient#expand()","bitly4r::client#info()","bitly4r::response#method_missing()","bitly4r::client::new()","bitly4r::error::new()","bitly4r::response::new()","bitly4r::client#shorten()","bitly4r::simpleclient#shorten()","bitly4r::params#to_s()","bitly4r::response#to_s()","bitly4r::response#to_str()","bitly4r::response#to_sym()","","",""],"info":[["Bitly4R","","Bitly4R.html","","<p>Client objects for Bitly4R.\n<p>See:\n<p>Bitly4R::Client\n"],["Bitly4R::Client","","Bitly4R/Client.html","","<p>Client\n<p>A client object for accessing the bit.ly API.\n<p>This Client uses version 4.0.0 of the API (eg. ‘/v4/*’). …\n"],["Bitly4R::Error","","Bitly4R/Error.html","","<p>Error\n<p>A Module-specific Exception class\n"],["Bitly4R::Params","","Bitly4R/Params.html","","<p>Params\n<p>Extends the Hash class to provide simply composition of a URL-encoded string.\n<p>Could have extended …\n"],["Bitly4R::Response","","Bitly4R/Response.html","","<p>Response\n<p>A response from the bit.ly API.\n<p>The to_s method should always return the ‘likely’ value, …\n"],["Bitly4R::SimpleClient","","Bitly4R/SimpleClient.html","","<p>Constructs a new ‘simple’ client.\n<p>Just like a standard Client, except that several methods are …\n"],["Object","","Object.html","",""],["Bitly4R","Object","Object.html#method-i-Bitly4R","(ops={})","<p>Constructs a SimpleClient with the usual Hash of arguments.\n"],["Token","Bitly4R","Bitly4R.html#method-c-Token","(token)","<p>Constructs a SimpleClient with an Access Token credential\n"],["expand","Bitly4R::Client","Bitly4R/Client.html#method-i-expand","(url)","<p>Invokes the API’s <strong>expand</strong> method. It reverses a shorten; the original full URL is re-hydrated.\n<p>dev.bitly.com/api-reference/#expandBitlink …\n"],["expand","Bitly4R::SimpleClient","Bitly4R/SimpleClient.html#method-i-expand","(*args)","<p>Same as Client.expand, except that the long URL is returned (vs. a Response)\n"],["info","Bitly4R::Client","Bitly4R/Client.html#method-i-info","(url)","<p>Invokes the API’s <strong>info</strong> method. Information about the shortened URL is returned by the service.\n<p>dev.bitly.com/api-reference/#getBitlink …\n"],["method_missing","Bitly4R::Response","Bitly4R/Response.html#method-i-method_missing","(sym, *args)","<p>Provides access to the other properties of the response body via camel-case or underscored names. For …\n"],["new","Bitly4R::Client","Bitly4R/Client.html#method-c-new","(ops={})","<p>Constructs a new client.\n<p>Any tuples provided in the optional Hash are injected into instance variables. …\n"],["new","Bitly4R::Error","Bitly4R/Error.html#method-c-new","(message, cause=nil)","<p>Provide a message and an optional ‘causing’ Exception.\n<p>If no message is passed – eg. only an …\n"],["new","Bitly4R::Response","Bitly4R/Response.html#method-c-new","(response, to_s_sym=nil)","<p>Constructs a bit.ly API response wrapper.\n<p><em>response</em> can be:\n<p>a JSON String, which becomes the body\n"],["shorten","Bitly4R::Client","Bitly4R/Client.html#method-i-shorten","(long_url, ops={})","<p>Invokes the API’s <strong>shorten</strong> method. That’s pretty much what makes bit.ly a valuable service.\n<p>dev.bitly.com/api-reference/#createBitlink …\n"],["shorten","Bitly4R::SimpleClient","Bitly4R/SimpleClient.html#method-i-shorten","(*args)","<p>Same as Client.shorten, except that the shortened URL is returned (vs. a Response)\n"],["to_s","Bitly4R::Params","Bitly4R/Params.html#method-i-to_s","()","<p>An encoded composite of the parameters, ready for use in a URL\n"],["to_s","Bitly4R::Response","Bitly4R/Response.html#method-i-to_s","()","<p>Provides the ‘likely’ value from the response.\n"],["to_str","Bitly4R::Response","Bitly4R/Response.html#method-i-to_str","()",""],["to_sym","Bitly4R::Response","Bitly4R/Response.html#method-i-to_sym","()","<p>Provides the ‘likely’ value from the response, as a symbol.\n"],["CHANGELOG","","CHANGELOG.html","","<p>0.2.0\n\n<pre>* upgrade to bit.ly API version 4.0.0\n* upgrade to Ruby 3\n* remove login + password + api_key, replace ...</pre>\n"],["LICENSE","","LICENSE.html","","<p>Copyright © 2009 Dan Foley / CantRemember.com\n<p>Permission is hereby granted, free of charge, to any person …\n"],["README","","README_rdoc.html","","<p>Bitly4R\n<p>A Ruby API for the bit.ly URL-shortening service\n<p>SimpleClient\n"]]}}